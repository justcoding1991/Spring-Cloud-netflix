<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springcloud.learn.goods.goodsserviceprovider.mapper.persistence.TbItemMapper">
  <resultMap id="BaseResultMap" type="com.springcloud.learn.goods.goodsserviceprovider.mapper.entity.TbItem">
    <id column="item_id" jdbcType="BIGINT" property="itemId" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="sell_point" jdbcType="VARCHAR" property="sellPoint" />
    <result column="rest_num" jdbcType="INTEGER" property="restNum" />
    <result column="limit_num" jdbcType="INTEGER" property="limitNum" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    item_id, item_name, price, title, sell_point, rest_num, limit_num, image, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.springcloud.learn.goods.goodsserviceprovider.mapper.entity.TbItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_item
    where item_id = #{itemId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_item
    where item_id = #{itemId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.springcloud.learn.goods.goodsserviceprovider.mapper.entity.TbItemExample">
    delete from tb_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springcloud.learn.goods.goodsserviceprovider.mapper.entity.TbItem">
    insert into tb_item (item_id, item_name, price, 
      title, sell_point, rest_num, 
      limit_num, image, create_time, 
      update_time)
    values (#{itemId,jdbcType=BIGINT}, #{itemName,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{title,jdbcType=VARCHAR}, #{sellPoint,jdbcType=VARCHAR}, #{restNum,jdbcType=INTEGER}, 
      #{limitNum,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.springcloud.learn.goods.goodsserviceprovider.mapper.entity.TbItem">
    insert into tb_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        item_id,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="sellPoint != null">
        sell_point,
      </if>
      <if test="restNum != null">
        rest_num,
      </if>
      <if test="limitNum != null">
        limit_num,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        #{itemId,jdbcType=BIGINT},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="sellPoint != null">
        #{sellPoint,jdbcType=VARCHAR},
      </if>
      <if test="restNum != null">
        #{restNum,jdbcType=INTEGER},
      </if>
      <if test="limitNum != null">
        #{limitNum,jdbcType=INTEGER},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springcloud.learn.goods.goodsserviceprovider.mapper.entity.TbItemExample" resultType="java.lang.Long">
    select count(*) from tb_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_item
    <set>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=BIGINT},
      </if>
      <if test="record.itemName != null">
        item_name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.sellPoint != null">
        sell_point = #{record.sellPoint,jdbcType=VARCHAR},
      </if>
      <if test="record.restNum != null">
        rest_num = #{record.restNum,jdbcType=INTEGER},
      </if>
      <if test="record.limitNum != null">
        limit_num = #{record.limitNum,jdbcType=INTEGER},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_item
    set item_id = #{record.itemId,jdbcType=BIGINT},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      title = #{record.title,jdbcType=VARCHAR},
      sell_point = #{record.sellPoint,jdbcType=VARCHAR},
      rest_num = #{record.restNum,jdbcType=INTEGER},
      limit_num = #{record.limitNum,jdbcType=INTEGER},
      image = #{record.image,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springcloud.learn.goods.goodsserviceprovider.mapper.entity.TbItem">
    update tb_item
    <set>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="sellPoint != null">
        sell_point = #{sellPoint,jdbcType=VARCHAR},
      </if>
      <if test="restNum != null">
        rest_num = #{restNum,jdbcType=INTEGER},
      </if>
      <if test="limitNum != null">
        limit_num = #{limitNum,jdbcType=INTEGER},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where item_id = #{itemId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springcloud.learn.goods.goodsserviceprovider.mapper.entity.TbItem">
    update tb_item
    set item_name = #{itemName,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      title = #{title,jdbcType=VARCHAR},
      sell_point = #{sellPoint,jdbcType=VARCHAR},
      rest_num = #{restNum,jdbcType=INTEGER},
      limit_num = #{limitNum,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where item_id = #{itemId,jdbcType=BIGINT}
  </update>
  <select id="selectStockForUpdate" parameterType="java.util.List" resultMap="BaseResultMap">
    select * from tb_item where item_id in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    for update
  </select>

  <update id="decreaseStock" parameterType="com.springcloud.learn.goods.goodsserviceprovider.mapper.entity.TbItem">
    update tb_item set rest_num =rest_num-#{record.restNum} where item_id = #{record.itemId} and rest_num - #{record.restNum}>0
  </update>
</mapper>